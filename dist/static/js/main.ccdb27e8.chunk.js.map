{"version":3,"sources":["components/dashboard/style.module.css","logo.svg","components/myTodo/Checkbox.js","components/myTodo/TableData.js","store/actions/userTaskActions.js","components/myTodo/myTodo.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/HomeLink.js","components/layout/Hamburger.js","components/layout/Navbar.js","components/dashboard/PublicNewTaskForm.js","store/actions/publicTaskActions.js","components/dashboard/TableData.js","components/dashboard/ProjectsTable.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/auth/SignUp.js","components/auth/SignIn.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/taskReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["module","exports","Checkboxes","props","React","useState","setChecked","Checkbox","checked","onChange","event","target","inputProps","TableData","state","task","until","tasks","this","auth","editButtonHandler","spanId","doneBtnId","editBtnId","document","getElementById","classList","remove","contentEditable","focus","add","map","taskSpanId","uuid","dateEditId","dateDoneId","dateId","uid","key","onClick","done","id","doneObj","updateDone","checkboxHandler","style","color","className","marginLeft","class","taskId","span","date","innerText","obj","updateUserTask","taskDoneBtnPressed","dateDoneBtnPressed","moment","createdAt","toDate","calendar","Button","e","preventDefault","deleteTask","deleteHandler","Component","connect","dispatch","console","log","getState","getFirestore","collection","doc","delete","then","type","catch","err","deleteUserTask","taskObj","update","MyToDo","handleChange","setState","value","handleSubmit","createUserTask","userTasks","profile","isLoaded","to","fontSize","firstName","lastName","Container","fluid","position","top","Row","marginBottom","marginTop","Col","onSubmit","TextField","required","label","InputLabelProps","shrink","IconButton","Table","striped","bordered","hover","variant","compose","firestore","ordered","firebase","getFirebase","authorId","Date","firestoreConnect","orderBy","signOut","href","SignedOutLinks","HomeLink","Hamburger","links","isEmpty","authError","PublicNewTaskForm","name","createPublicTask","paddingLeft","paddingRight","nameField","defaultValue","componentName","Notifications","notifications","height","backgroundSize","backgroundRepeat","backgroundColor","backgroundImage","item","display","user","content","time","fromNow","Dashboard","publicTasks","warning","paddingTop","limit","SignUp","email","password","signUp","htmlFor","newUser","createUserWithEmailAndPassword","resp","set","initials","SignIn","signIn","creds","credentials","signInWithEmailAndPassword","App","exact","path","component","Boolean","window","location","hostname","match","initState","authReducer","action","message","taskReducer","projects","rootReducer","combineReducers","project","firestoreReducer","firebaseReducer","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","createFirestoreInstance","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ccdb27e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameField\":\"style_nameField__3Qlj9\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\n\nexport default function Checkboxes(props) {\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = event => {\n    setChecked(event.target.checked);\n  };\n\n  return (\n    <div>\n      <Checkbox\n        checked={props.checked}\n        onChange={handleChange}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n      />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport {\n  updateUserTask,\n  updateDone,\n} from \"../../store/actions/userTaskActions\";\nimport moment from \"moment\";\nimport uuid from \"react-uuid\";\nimport Button from \"@material-ui/core/Button\";\nimport { deleteUserTask } from \"../../store/actions/userTaskActions\";\nimport { connect } from \"react-redux\";\nimport Checkbox from \"./Checkbox\";\n\nclass TableData extends Component {\n  state = {\n    task: \"\",\n    until: \"\",\n  };\n\n  render() {\n    const { tasks } = this.props;\n    const { auth } = this.props;\n\n    const deleteHandler = (e, uid) => {\n      e.preventDefault();\n      this.props.deleteTask(uid);\n    };\n\n    let editButtonHandler = (spanId, doneBtnId, editBtnId) => {\n      let doneIcon = document.getElementById(doneBtnId);\n      doneIcon.classList.remove(\"hidden\");\n      let task = document.getElementById(spanId);\n      task.contentEditable = \"true\";\n      task.focus();\n      let editBtn = document.getElementById(editBtnId);\n      editBtn.classList.add(\"hidden\");\n    };\n\n    let taskDoneBtnPressed = (editBtnId, doneBtnId, spanId, taskId, dateId) => {\n      let doneIcon = document.getElementById(doneBtnId);\n      doneIcon.classList.add(\"hidden\");\n      let editBtn = document.getElementById(editBtnId);\n      editBtn.classList.remove(\"hidden\");\n      let span = document.getElementById(spanId);\n\n      span.contentEditable = \"false\";\n      let date = document.getElementById(dateId).innerText;\n\n      let obj = { task: span.innerText, until: date }; //state asynchrous calistigi icin ilk seferinde state bos guncelliyordu. oyuzden obj de tuttum\n\n      this.props.updateUserTask(obj, taskId);\n    };\n\n    let dateDoneBtnPressed = (\n      editBtnId,\n      doneBtnId,\n      spanId,\n      taskId,\n      taskSpanId\n    ) => {\n      let doneIcon = document.getElementById(doneBtnId);\n      doneIcon.classList.add(\"hidden\");\n      let editBtn = document.getElementById(editBtnId);\n      editBtn.classList.remove(\"hidden\");\n      let span = document.getElementById(spanId);\n      span.contentEditable = \"false\";\n      let taskSpan = document.getElementById(taskSpanId).innerText;\n\n      let obj = { task: taskSpan, until: span.innerText }; //state asynchrous calistigi icin ilk seferinde state bos guncelliyordu. oyuzden obj de tuttum\n\n      this.props.updateUserTask(obj, taskId);\n    };\n\n    const checkboxHandler = (done, id) => {\n      let updatedDone = done === true ? false : true;\n      let doneObj = { done: updatedDone };\n\n      this.props.updateDone(doneObj, id);\n    };\n\n    return (\n      <>\n        {tasks &&\n          tasks.map((task) => {\n            let taskSpanId = uuid();\n            let doneBtnId = uuid();\n            let editBtnId = uuid();\n            let dateEditId = uuid();\n            let dateDoneId = uuid();\n            let dateId = uuid();\n            if (task.uid === auth.uid) {\n              return (\n                <tr key={uuid()}>\n                  <td>\n                    {\" \"}\n                    <label onClick={() => checkboxHandler(task.done, task.id)}>\n                      <Checkbox checked={task.done}></Checkbox>\n                      <span style={{ color: \"red\" }}></span>\n                    </label>\n                  </td>\n                  <td>\n                    <span\n                      className={task.done === true ? \"done\" : null}\n                      id={taskSpanId}\n                    >\n                      {task.task}{\" \"}\n                    </span>\n\n                    <i\n                      id={editBtnId}\n                      style={{ marginLeft: \"15px\" }}\n                      onClick={() =>\n                        editButtonHandler(taskSpanId, doneBtnId, editBtnId)\n                      }\n                      class={\" fas fa-pencil-alt\"}\n                    ></i>\n\n                    <i\n                      id={doneBtnId}\n                      style={{ marginLeft: \"15px\" }}\n                      onClick={() =>\n                        taskDoneBtnPressed(\n                          editBtnId,\n                          doneBtnId,\n                          taskSpanId,\n                          task.id,\n                          dateId\n                        )\n                      }\n                      class={\"fas fa-check-circle hidden\"}\n                    ></i>\n                  </td>\n\n                  <td>\n                    <span\n                      className={task.done === true ? \"done\" : null}\n                      id={dateId}\n                    >\n                      {\" \"}\n                      {task.until}{\" \"}\n                    </span>\n\n                    <i\n                      id={dateEditId}\n                      onClick={() =>\n                        editButtonHandler(dateId, dateDoneId, dateEditId)\n                      }\n                      style={{ marginLeft: \"15px\" }}\n                      // onClick={() => editButtonHandler(taskId, doneBtnId, editBtnId)}\n                      class={\" fas fa-pencil-alt\"}\n                    ></i>\n\n                    <i\n                      id={dateDoneId}\n                      style={{ marginLeft: \"15px\" }}\n                      onClick={() =>\n                        dateDoneBtnPressed(\n                          dateEditId,\n                          dateDoneId,\n                          dateId,\n                          task.id,\n                          taskSpanId\n                        )\n                      }\n                      class={\"fas fa-check-circle hidden\"}\n                    ></i>\n                  </td>\n\n                  <td>{moment(task.createdAt.toDate()).calendar()}</td>\n                  <td>\n                    <Button onClick={(e) => deleteHandler(e, task.id)}>\n                      <i\n                        style={{ color: \"red\" }}\n                        class=\"fas fa-trash-alt fa-lg\"\n                      ></i>\n                    </Button>\n                  </td>\n                </tr>\n              );\n            }\n          })}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteTask: (id) => dispatch(deleteUserTask(id)),\n    updateUserTask: (taskObj, id) => dispatch(updateUserTask(taskObj, id)),\n    updateDone: (doneObj, id) => dispatch(updateDone(doneObj, id)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TableData);\n","export const createUserTask = taskObj => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const authorId = getState().firebase.auth.uid;\n\n    const firestore = getFirestore();\n    firestore\n      .collection(\"userTasks\")\n      .add({\n        ...taskObj, ///project.title ve project.content demek ile ayni sey (spread operator kullanmak)\n        createdAt: new Date(),\n        uid: authorId,\n        done: false\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_USER_TASK\", taskObj });\n      })\n      .catch(err => {\n        dispatch({ type: \"CREATE_USER_TASK_ERROR\", err });\n      });\n  };\n};\n\nexport const deleteUserTask = id => {\n  console.log(\"dispatch\", id);\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firestore\n      .collection(\"userTasks\")\n      .doc(id)\n      .delete()\n      .then(() => {\n        console.log(\"deleted\");\n        dispatch({ type: \"DELETE_PROJECT_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"DELETE_PROJECT_ERROR\" });\n      });\n  };\n};\nexport const updateUserTask = (taskObj, taskId) => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firestore\n      .collection(\"userTasks\")\n      .doc(taskId)\n      .update(taskObj)\n      .then(() => {\n        console.log(\"updated\");\n        dispatch({ type: \"UPDATE_PROJECT_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"UPDATE_PROJECT_ERROR\" });\n      });\n  };\n};\nexport const updateDone = (doneObj, taskId) => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firestore\n      .collection(\"userTasks\")\n      .doc(taskId)\n      .update(doneObj)\n      .then(() => {\n        console.log(\"updated\");\n        dispatch({ type: \"UPDATE_PROJECT_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"UPDATE_PROJECT_ERROR\" });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { connect } from \"react-redux\";\nimport { createUserTask } from \"../../store/actions/userTaskActions\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport TableData from \"./TableData\";\nimport { Redirect } from \"react-router-dom\";\n\nclass MyToDo extends Component {\n  state = {\n    task: \"\",\n    until: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createUserTask(this.state);\n  };\n\n  render() {\n    const { userTasks, auth, profile } = this.props;\n\n    if (!auth.uid && auth.isLoaded) return <Redirect to=\"/\"></Redirect>;\n\n    return (\n      <>\n        <div class=\"container\">\n          <span style={{ fontSize: \"25px\" }}>\n            Welcome <br /> {profile.firstName} {profile.lastName}\n          </span>\n        </div>\n        <Container fluid style={{ position: \"absolute\", top: \"50px\" }}>\n          <Row\n            className=\"no-gutters mx-0\"\n            style={{ marginBottom: \"50px\", marginTop: \"20px\" }}\n          >\n            <Col>\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <TextField\n                  onChange={(event) => this.handleChange(event)}\n                  required\n                  id=\"task\"\n                  label=\"Description\"\n                />\n\n                <TextField\n                  required\n                  onChange={(event) => this.handleChange(event)}\n                  id=\"until\"\n                  label=\"Date\"\n                  type=\"date\"\n                  style={{ marginLeft: \"15px\" }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <IconButton type=\"submit\">\n                  <AddCircleIcon></AddCircleIcon>\n                </IconButton>\n              </form>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div>\n                <Table striped bordered hover variant=\"dark\">\n                  <thead>\n                    <tr>\n                      <th>Done</th>\n                      <th>Task</th>\n                      <th>Date</th>\n                      <th>Created Date</th>\n                      <th>Remove</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <TableData auth={auth} tasks={userTasks}></TableData>\n                  </tbody>\n                </Table>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userTasks: state.firestore.ordered.userTasks,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n    // notifications: state.firestore.ordered.notifications\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createUserTask: (taskObj) => dispatch(createUserTask(taskObj)),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection: \"userTasks\", orderBy: [\"createdAt\", \"desc\"] },\n    // { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(MyToDo);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { signOut } from \"../../store/actions/authActions\";\nimport { connect } from \"react-redux\";\n\nexport function SignedInLinks(props) {\n  return (\n    <>\n      <li>\n        <NavLink to={\"/mytodo\"}>My ToDo List</NavLink>\n      </li>\n      <li>\n        <a href=\"\" onClick={() => props.signOut()}>\n          Log Out\n        </a>\n      </li>\n    </>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  console.log(newUser);\n\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function SignedOutLinks() {\n  return (\n    <>\n      <li>\n        <NavLink to={\"/login\"}>Login</NavLink>\n      </li>\n      <li>\n        <NavLink to={\"/signup\"}>Sign Up</NavLink>\n      </li>\n    </>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function HomeLink() {\n  return (\n    <>\n      <li>\n        <NavLink to={\"/\"}>Home</NavLink>\n      </li>\n    </>\n  );\n}\n","import React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport style from \"./Hamburger.css\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { NavLink } from \"react-router-dom\";\nimport HomeLink from \"./HomeLink\";\nexport default class Hamburger extends React.Component {\n  showSettings(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const { auth } = this.props;\n\n    const links = auth.isEmpty ? (\n      <SignedOutLinks></SignedOutLinks>\n    ) : (\n      <SignedInLinks></SignedInLinks>\n    );\n    // NOTE: You also need to provide styles, see https://github.com/negomi/react-burger-menu#styling\n    return (\n      <Menu id=\"hamburger\">\n        <HomeLink></HomeLink>\n        {links}\n      </Menu>\n    );\n  }\n}\n","import React from \"react\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport Hamburger from \"./Hamburger\";\nimport { connect } from \"react-redux\";\nimport style from \"./Navbar.css\";\n\nfunction Navbar(props) {\n  const { auth } = props;\n  const links = auth.uid ? (\n    <SignedInLinks></SignedInLinks>\n  ) : (\n    <SignedOutLinks></SignedOutLinks>\n  );\n  return (\n    <div>\n      <Hamburger id=\"burger\" auth={auth}></Hamburger>\n      <nav class=\"transparent\">\n        <div class=\"nav-wrapper   \">\n          <a href=\"/\" class=\"brand-logo center\">\n            ToDo List App\n          </a>\n\n          <ul className=\"right hide-on-med-and-down right \" id=\"mobile-demo\">\n            {auth.isLoaded && links}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Navbar);\n","import React, { Component } from \"react\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { createPublicTask } from \"../../store/actions/publicTaskActions\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport style from \"./style.module.css\";\nexport class PublicNewTaskForm extends Component {\n  state = {\n    task: \"\",\n    until: \"\",\n    name: \"Anonymous\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createPublicTask(this.state);\n  };\n\n  render() {\n    return (\n      <form style={{ marginTop: \"0\" }} onSubmit={(e) => this.handleSubmit(e)}>\n        <TextField\n          onChange={(event) => this.handleChange(event)}\n          required\n          id=\"task\"\n          label=\"Description\"\n        />\n\n        <TextField\n          required\n          onChange={(event) => this.handleChange(event)}\n          id=\"until\"\n          label=\"Date\"\n          type=\"date\"\n          style={{ paddingLeft: \"15px\", paddingRight: \"15px\" }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          className={style.nameField}\n          required\n          onChange={(event) => this.handleChange(event)}\n          label=\"Name\"\n          id=\"name\"\n          defaultValue=\"Anonymous\"\n        />\n        <IconButton type=\"submit\">\n          <AddCircleIcon></AddCircleIcon>\n        </IconButton>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createPublicTask: (taskObj) => dispatch(createPublicTask(taskObj)),\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\n  PublicNewTaskForm\n);\n","export const createPublicTask = taskObj => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n\n    const firestore = getFirestore();\n    firestore\n      .collection(\"publicTasks\")\n      .add({\n        ...taskObj, ///project.title ve project.content demek ile ayni sey (spread operator kullanmak)\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PUBLIC_TASK\", taskObj });\n      })\n      .catch(err => {\n        dispatch({ type: \"CREATE_PUBLIC_TASK_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport uuid from \"react-uuid\";\n\nconst TableData = props => {\n  const { tasks } = props;\n\n  return (\n    <>\n      {tasks &&\n        tasks.map(task => {\n          return (\n            <tr key={uuid()}>\n              <td>{task.task}</td>\n              <td>{task.until}</td>\n              <td>{task.name}</td>\n              <td>{moment(task.createdAt.toDate()).calendar()}</td>\n            </tr>\n          );\n        })}\n    </>\n  );\n};\n\nexport default TableData;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport TableData from \"./TableData.js\";\nexport default function componentName(props) {\n  return (\n    <>\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>Task</th>\n            <th>Until</th>\n            <th>User Name</th>\n            <th>Created Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          <TableData tasks={props.tasks}></TableData>\n        </tbody>\n      </Table>\n    </>\n  );\n}\n","import React from \"react\";\nimport moment from \"moment\";\nconst Notifications = (props) => {\n  const { notifications } = props;\n\n  return (\n    <div\n      className=\"section\"\n      style={{\n        height: \"580px\",\n\n        backgroundSize: \"100% 100%\",\n        backgroundRepeat: \"no-repeat\",\n\n        backgroundColor: \"#FF3CAC\",\n        backgroundImage:\n          \"linear-gradient(225deg, #FF3CAC 0%, #784BA0 50%, #2B86C5 100%)\",\n      }}\n    >\n      <div className=\"card notCard z-depth-0 transparent mt-0 pt-0 border-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title not-title \">Notifications</span>\n          <ul className=\"notifications notUL mt-0 pt-0\">\n            {notifications &&\n              notifications.map((item) => {\n                return (\n                  <li key={item.id}>\n                    <p\n                      style={{\n                        color: \"pink\",\n                        fontSize: \"20px\",\n                        display: \"inline\",\n                      }}\n                    >\n                      {item.user}\n                    </p>\n                    <span className=\"white-text\">{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React, { Component } from \"react\";\nimport PublicNewTaskForm from \"./PublicNewTaskForm\";\nimport ProjectsTable from \"./ProjectsTable\";\nimport Notifications from \"./Notifications\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport notifStyle from \"./notifStyle.css\";\n\nclass Dashboard extends Component {\n  render() {\n    const { publicTasks, notifications, auth } = this.props;\n    let warning = auth.isEmpty ? (\n      <p style={{ color: \"pink\" }}>\n        For personal ToDo App usage please\n        <a href=\"/signup\">\n          <span style={{ color: \"blue\" }}> signup </span>\n        </a>\n        or\n        <a href=\"/login\">\n          <span style={{ color: \"blue\" }}> login</span>\n        </a>\n      </p>\n    ) : (\n      <p style={{ color: \"pink\" }}>\n        For personal ToDo App usage please go to\n        <a href=\"/mytodo\">\n          <span style={{ color: \"blue\" }}> myTodo</span>\n        </a>\n      </p>\n    );\n\n    return (\n      <div className={\"mainDash\"}>\n        <div className=\"dashboard container\">\n          <p className=\"mt-4 mb-0 pb-0\" style={{ color: \"pink\" }}></p>\n          <div style={{ marginTop: \"0px\", paddingTop: \"0\" }} className=\"row\">\n            <div className=\"col\">\n              {auth.isLoaded && warning}\n              <PublicNewTaskForm></PublicNewTaskForm>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <ProjectsTable tasks={publicTasks}></ProjectsTable>\n            </div>\n          </div>\n        </div>\n        <div className=\"notifications  \">\n          <Notifications notifications={notifications}></Notifications>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    publicTasks: state.firestore.ordered.publicTasks,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"publicTasks\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 15, orderBy: [\"time\", \"desc\"] },\n  ])\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nexport class SignUp extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\"></Redirect>;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={e => this.handleSubmit(e)} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              onChange={e => this.handleChange(e)}\n              type=\"text\"\n              id=\"lastName\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              onChange={e => this.handleChange(e)}\n              type=\"text\"\n              id=\"firstName\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              onChange={e => this.handleChange(e)}\n              type=\"email\"\n              id=\"email\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              onChange={e => this.handleChange(e)}\n              type=\"password\"\n              id=\"password\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { authError, auth } = this.props;\n\n    if (auth.uid) return <Redirect to=\"/\"></Redirect>;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={(e) => this.handleSubmit(e)} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">SignIn</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              required\n              type=\"email\"\n              id=\"email\"\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              required\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport MyToDo from \"./components/myTodo/myTodo\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport SignUp from \"./components/auth/SignUp\";\nimport SignIn from \"./components/auth/SignIn\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar></Navbar>\n        <Switch>\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/login\" component={SignIn} />\n          <Route exact path=\"/mytodo\" component={MyToDo} />\n          <Route exact path=\"/\" component={Dashboard} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n\n      return {\n        ...state,\n        authError: \"Login Failed\"\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: action.err.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  tasks: [{}]\n};\n\nconst taskReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PUBLIC_TASK\":\n      console.log(\"created PUBLIC project\", action.projects);\n      return state;\n    case \"CREATE_USER_TASK\":\n      console.log(\"created USER project\", action.projects);\n      return state;\n    case \"CREATE_PUBLIC_TASK_ERROR\":\n      console.log(\"create PUBLIC project error\", action.err);\n      return state;\n    case \"CREATE_USER_TASK_ERROR\":\n      console.log(\"create USER project error\", action.err);\n      return state;\n    case \"DELETE_PROJECTS_SUCCESS\":\n      console.log(\"DELETE SUCCESS\");\n      return state;\n    case \"DELETE_PROJECT_ERROR\":\n      console.log(\"DELETE ERROR\");\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;\n","import authReducer from \"./authReducer\";\nimport taskReducer from \"./taskReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: taskReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nexport const config = {\n  apiKey: \"AIzaSyCSPedDd2_aBAoH9Czld8b4gSQvTDcbE04\",\n  authDomain: \"todo-app-38640.firebaseapp.com\",\n  databaseURL: \"https://todo-app-38640.firebaseio.com\",\n  projectId: \"todo-app-38640\",\n  storageBucket: \"todo-app-38640.appspot.com\",\n  messagingSenderId: \"216777376486\",\n  appId: \"1:216777376486:web:1d002595844b4773c67127\",\n  measurementId: \"G-5BWTFEHWQ3\"\n};\n\nfirebase.initializeApp(config);\n\nfirebase.firestore();\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\"; //binding redux withreact app\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  createFirestoreInstance,\n  getFirestore,\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebase, { config } from \"./config/fbConfig\";\n\nconst profileSpecificProps = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, config)\n  )\n);\nconst rrfProps = {\n  firebase,\n  config: config,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  config: profileSpecificProps,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App></App>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}